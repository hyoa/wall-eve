version: '3.7'
services:
  api:
    container_name: api
    build:
      context: ./
      dockerfile: docker/api/Dockerfile
    ports:
      - 1337:1337
    restart: on-failure
    env_file:
      - .env.docker
    depends_on:
      - redis
  
  heartbeat:
    container_name: heartbeat
    build:
      context: ./
      dockerfile: docker/worker/Dockerfile
      args:
        - workerName=heartbeat
    restart: always
    env_file:
      - .env.docker
    depends_on:
      - redis
  
  delayer:
    container_name: delayer
    build:
      context: ./
      dockerfile: docker/worker/Dockerfile
      args:
        - workerName=delayer
    restart: always
    env_file:
      - .env.docker
    depends_on:
      - redis

  scheduler:
    container_name: scheduler
    build:
      context: ./
      dockerfile: docker/worker/Dockerfile
      args:
        - workerName=scheduler
    restart: always
    env_file:
      - .env.docker
    depends_on:
      - redis
  
  refresh:
    container_name: refresh
    build:
      context: ./
      dockerfile: docker/worker/Dockerfile
      args:
        - workerName=refresh
    restart: always
    env_file:
      - .env.docker
    depends_on:
      - redis

  indexer-1:
    container_name: indexer-1
    build:
      context: ./
      dockerfile: docker/worker/Dockerfile
      args:
        - workerName=indexer
        - cmdExec=run indexer-consumer-1
    restart: always
    env_file:
      - .env.docker
    depends_on:
      - redis
    
  indexer-2:
    container_name: indexer-2
    build:
      context: ./
      dockerfile: docker/worker/Dockerfile
      args:
        - workerName=indexer
        - cmdExec=run indexer-consumer-2
    restart: always
    env_file:
      - .env.docker
    depends_on:
      - redis
  
  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "1338:8080"
    volumes:
      - ./swagger/wall-eve.yaml:/swagger/wall-eve.yaml
    environment:
      SWAGGER_JSON: /swagger/wall-eve.yaml
  
  redis:
    image: "redislabs/redismod"
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    restart: always
    entrypoint: >
      redis-server
        --requirepass asuperstrongpassword
        --loadmodule /usr/lib/redis/modules/redisearch.so
        --loadmodule /usr/lib/redis/modules/redistimeseries.so
        --loadmodule /usr/lib/redis/modules/rejson.so
        --appendonly yes

volumes:
  redis:
    driver: local